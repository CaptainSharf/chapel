simple case: everything should be optimized
BlockArr doing optimized swap. Domains: {1..10} {1..10} Bounding boxes: {1..10} {1..10}
DefaultRectangular doing optimized swap. Domains: (1..10) (1..10)
20 20 20 20 20 20 20 20 20 20
10 10 10 10 10 10 10 10 10 10

one array is unevenly distributed. block shouldn't optimize
BlockArr doing unoptimized swap. Domains: {0..9} {1..10} Bounding boxes: {1..10} {1..10}
20 20 20 20 20 20 20 20 20 20
10 10 10 10 10 10 10 10 10 10

both are unevenly distributed, but they align with each other
BlockArr doing optimized swap. Domains: {0..9} {0..9} Bounding boxes: {1..10} {1..10}
DefaultRectangular doing optimized swap. Domains: (0..9) (0..9)
20 20 20 20 20 20 20 20 20 20
10 10 10 10 10 10 10 10 10 10

One of the domains are strided
BlockArr doing unoptimized swap (type mismatch). Domains: {0..9 by 2} {0..4} Bounding boxes: {1..10} {1..10}
20 20 20 20 20
10 10 10 10 10

both are strided and aligned
BlockArr doing optimized swap. Domains: {0..9 by 2} {0..9 by 2} Bounding boxes: {1..10} {1..10}
DefaultRectangular doing optimized swap. Domains: (0..9 by 2) (0..9 by 2)
20 20 20 20 20
10 10 10 10 10

both are strided, have same number of elements but not aligned, block shouldn't optimize
BlockArr doing unoptimized swap. Domains: {0..9 by 2} {1..10 by 2} Bounding boxes: {1..10} {1..10}
20 20 20 20 20
10 10 10 10 10

both are strided and misaligned
BlockArr doing unoptimized swap. Domains: {0..9 by 2} {0..9 by 2 align 1} Bounding boxes: {1..10} {1..10}
20 20 20 20 20
10 10 10 10 10

